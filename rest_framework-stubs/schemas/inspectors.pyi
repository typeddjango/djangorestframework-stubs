from _typeshed import Incomplete
from collections.abc import Mapping
from re import Pattern
from typing import Any

class ViewInspector:
    header_regex: Pattern
    instance_schemas: Mapping[str, Any]
    def __init__(self) -> None: ...
    def __get__(self, instance: Any, owner: Any) -> Incomplete: ...
    def __set__(self, instance: Any, other: Any) -> None: ...
    @property
    def view(self) -> Incomplete: ...
    @view.setter
    def view(self, value: Any) -> None: ...
    def get_description(self, path: Any, method: Any) -> str: ...

class DefaultSchema(ViewInspector): ...
