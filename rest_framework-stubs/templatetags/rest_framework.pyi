from _typeshed import Incomplete
from typing import Any

from django import template
from django.contrib.auth.base_user import AbstractBaseUser
from django.contrib.auth.models import AnonymousUser
from rest_framework.request import Request

register: Any
class_re: Any

def highlight_code(parser: Any, token: Any) -> Incomplete: ...

class CodeNode(template.Node):
    style: str
    lang: Any
    nodelist: Any
    def __init__(self, lang: Any, code: Any) -> None: ...
    def render(self, context: Any) -> Incomplete: ...

def with_location(fields: Any, location: Any) -> Incomplete: ...
def form_for_link(link: Any) -> Incomplete: ...
def render_markdown(markdown_text: Any) -> Incomplete: ...
def get_pagination_html(pager: Any) -> Incomplete: ...
def render_form(serializer: Any, template_pack: Any | None = ...) -> Incomplete: ...
def render_field(field: Any, style: Any) -> Incomplete: ...
def optional_login(request: Request) -> Incomplete: ...
def optional_docs_login(request: Request) -> Incomplete: ...
def optional_logout(request: Request, user: AnonymousUser | AbstractBaseUser) -> Incomplete: ...
def add_query_param(request: Request, key: str, val: Any) -> Incomplete: ...
def as_string(value: Any) -> str: ...
def as_list_of_strings(value: Any) -> list[str]: ...
def add_class(value: Any, css_class: Any) -> Incomplete: ...
def format_value(value: Any) -> Incomplete: ...
def items(value: Any) -> Incomplete: ...
def data(value: Any) -> Incomplete: ...
def schema_links(section: Any, sec_key: Any | None = ...) -> Incomplete: ...
def add_nested_class(value: Any) -> Incomplete: ...

TRAILING_PUNCTUATION: Any
WRAPPING_PUNCTUATION: Any
word_split_re: Any
simple_url_re: Any
simple_url_2_re: Any
simple_email_re: Any

def smart_urlquote_wrapper(matched_url: Any) -> Incomplete: ...
def urlize_quoted_links(
    text: Any, trim_url_limit: Any | None = ..., nofollow: bool = ..., autoescape: bool = ...
) -> Incomplete: ...
def break_long_headers(header: Any) -> Incomplete: ...
